***Nov 11 2014 2:45 - 3:45*** 
make a use case diagram with 3 use case and sequence diagram

zakk   -------> place piece
		move piece ----> select piece, select destination

matt	remove piece
		new game
		exit

matthew	easy mode
		hard mode
		2 player	

add new features
	-harder mode
	-bigger display
	-shadow of remove
	-undo move button
	-counter keep track of how many pieces
	-instructions in game help menu

-created text version of use case diagram
-decided on features we want to add

-For next meeting: write use case descriptions

-next meeting: Nov 13 or Nov 18 @ 2:45


***Nov 18 2014 2:45 - 3:30 *** Present: Matthew, Matt
-Collected use cases (and pushed to git repo)

Todo list:
=Requirements stuff
--Get rest of use cases and use case descriptions
--Use case diagram(s)
--Use case scenario for use case
---Sequence diagram for the realization of each scenario
=Design stuff
--Summarize UI of program, using screenshots and textual descriptions
--Class diagram (UML)
--Describe mill algorithm (Matthew)
--Describe game over and who is winner algorithm (Zakk)
--Describe AI algorithm (Matt)
--*Algorithms may use pseudo-code, but not code from program, 1 algorithm per person
=Testing
--Describe how program was tested against use case scenarios. List steps for each test
--Describe detailed steps of 2 tests with human vs AI: human wins; AI wins
--*Each team member must be involved in at least one of the above
=Lessons learned
=Add new features (above)

For next time:
-All:     - Refine use cases and descriptions
          - Use case scenarios for use cases
          - Sequence diagram for each use case scenario
-Zakk:    - Describe game over and who is winner algorithm
-Matt:    - Describe AI algorithm
-Matthew: - Describe mill algorithm
-Someone (hopefully): - Figure out way to generate UML class diagram
                      - Summarize UI of program, using screenshots and textual descriptions
                      - Start implementing new features
     
Next meeting: Dec 2, 2014 @ 2:45ish     


***Meeting on Dec 2, 2014 @2:45***

For next time:
All		- Make use case scenarios and diagrams for each of our own use case description
Zakk	- Make UI description
Matthew	- Make class diagram
Matt	- Describe AI algorithm

we still need harder AI mode if we still want to implement that

Next meeting Monday Dec 8, 2014 11:00am

***Meeting on Dec 8, 2014 @ 11:00***

Next meeting on Thursday Dec 11, 2014 @ 3:00pm

Zakk	- hard mode AI radio button	(update gui description)
		- sequence diagrams
		- use case scenarios (place and move)
		- lessons learned
		- junit tests for remaining gui items

Matt	- hard AI code (done)
		- use case scenarios (remove piece, new game, and exit) (done)
		- lessons learned
		- describe tests from section 4.2 (done)

Matthew	- start write up and create skeleton for all sections
		- write section 1.1 and 1.3
		- lessons learned
		- describe tests from section 4.1


BUG: Against Easy AI, I trapped 3 pieces and captured the rest.  The AI went in infinite loop.
It's not game over because he has flying pieces, but refuses to use them.
-Should be fixed now -Matt
     