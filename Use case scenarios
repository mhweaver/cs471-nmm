Easy AI - Scenario
1. The player clicks on the "Easy AI" radio button.
2. The program starts a new game.
3. White is a new human player, Black is a new Easy AI player.

Hard AI - Scenario
1. The player clicks on the "Hard AI" radio button.
2. The program starts a new game.
3. White is a new human player, Black is a new Hard AI player.

Player - Scenario
1. The player clicks on the "2 Player" radio button.
2. The program starts a new game.
3. White is a new human player, Black is a new human player.

Place Piece - A Possible Use Case Scenario
1. Player 1 clicks on node in top left corner of board.
2. GUI asks Game if node is valid
3. Game asks Node which player selected node belongs to
4. Node returns null
5. Game returns success
6. GUI re-draws board with Player 1's piece on node 
   in top left corner.
   
Move Piece - A Possible Scenario
1. Player 1 selects one of their pieces to move.
2. Gui asks Game if selected piece is valid.
3. Game asks Node who owns node
4. Node returns Player 1
5. Game returns success.
6. Gui highlights selected piece.
7. Player 1 selects a valid destination to move piece too.
8. Gui asks Game if destination is valid.
9. Game asks Node who owns node
10.Node returns null
11.Game returns success.
12.Gui moves piece from source to destination.
   
Remove Piece - Scenario - Should use :GUI, :Game, :Board, :Node, :Player 
1. Player 1 clicks the node they wish to remove
2. GUI asks Game.Board for the Node object corresponding to click location
3. GUI asks game to do remove move on that Node
3. Game checks and verifies that the expected move is Remove
4. Game asks Node object for owner
5. Game verifies owner is the Player 2 object
7. Game verifies the piece is either not in a mill or all of Player 2's pieces are in mills 
6. Game object directs Player 2 object to remove a piece
7. Player 2 object adjusts piece counts
8. Game asks both Player objects if they have available moves
9. Both Player objects return true (in this scenario)
10. Game sets expected next move to Move
8. GUI requests the current Board from Game
9. GUI redraws the board based on current Board object
8. GUI requests next expected move from Game object
9. If the expected move is None, GUI ends the game
10. GUI awaits input

New Game - Scenario - Should use :GUI, :Game, :Board, :Player
1. Player clicks the New Game button
2. GUI creates a new :Game instance
3. GUI asks Game for player 2's Player object 
3. GUI creates a new AI object using game and player 2 objects
4. GUI requests the current Board from Game
5. GUI redraws the board, based on the Board object
6. GUI awaits input

Exit - Scenario
1. Player clicks the Exit button
2. GUI immediately terminates the process, with exit code 0



