Easy AI - Scenario
1. The player clicks on the "Easy AI" radio button.
2. The program starts a new game.
3. White is a new human player, Black is a new Easy AI player.

Hard AI - Scenario
1. The player clicks on the "Hard AI" radio button.
2. The program starts a new game.
3. White is a new human player, Black is a new Hard AI player.

Player - Scenario
1. The player clicks on the "2 Player" radio button.
2. The program starts a new game.
3. White is a new human player, Black is a new human player.

Place Piece - A Possible Use Case Scenario
1. Player 1 clicks on node in top left corner of board.
2. GUI asks Game if node is valid
3. Game asks Node which player selected node belongs to
4. Node returns null
5. Game returns success
6. GUI re-draws board with Player 1's piece on node 
   in top left corner.
   
Move Piece - A Possible Scenario
1. Player 1 selects one of their pieces to move.
2. Gui asks Game if selected piece is valid.
3. Game asks Node who owns node
4. Node returns Player 1
5. Game returns success.
6. Gui highlights selected piece.
7. Player 1 selects a valid destination to move piece too.
8. Gui asks Game if destination is valid.
9. Game asks Node who owns node
10.Node returns null
11.Game returns success.
12.Gui moves piece from source to destination.
   
Remove Piece - Scenario - Should use :GUI, :Game, :Board, :Node, :Player 
1. Player 1 clicks the node they wish to remove
2. :GUI asks :Game for current expectedMove
3. :Game returns Move.Remove
4. :GUI asks :Game for the :Node corresponding to where Player 1 clicked
5. :Game returns the requested :Node object
6. :GUI asks Game to do a remove move on that :Node
7. :Board asks :Node for its :Player object
8. :Node returns Player 2's :Player
9. :Game informs :Player that it's getting a piece removed 
10. :Player returns
11. :Game asks :Node to remove its player and become "selected"
12. :Node returns
13. :Game asks both :Players if they have available moves
14. Both :Players return true
15. :Game returns (remove move is complete)
16. :GUI asks :Game for all :Nodes
17. :Game returns all :Nodes
18. :GUI asks each :Node for its :Player's color
19. Each :Node asks its :Player for its color
20. Each :Player returns its color
21. Each :Node returns its :Player's color
22. :GUI asks :Game for player1:Player and player2:Player
23. :Game returns both :Players
24. :GUI asks :Players for piece counts
25. :Players return piece counts
26. :GUI redraws board and returns

New Game - Scenario - Should use :GUI, :Game, :Board, :Player
1. Player clicks the New Game button
2. GUI creates a new :Game instance
3. GUI asks Game for player 2's Player object 
3. GUI creates a new AI object using game and player 2 objects
4. GUI requests the current Board from Game
5. GUI redraws the board, based on the Board object
6. GUI awaits input

Exit - Scenario
1. Player clicks the Exit button
2. GUI immediately terminates the process, with exit code 0



